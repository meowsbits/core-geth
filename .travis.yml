language: go
go_import_path: github.com/ethereum/go-ethereum
sudo: false
jobs:
  include:

  # Run build and tests on ARM64 on Pull Requests.
  - stage: build
    name: "Tests A-M"
    os: linux
    arch: arm64
    dist: bionic
    go: 1.16.x
    env:
      - GO111MODULE=on
    script:
      - go run build/ci.go test $(printf './%s/... ' $(go list ./... | sed 's|github.com/ethereum/go-ethereum/||g' | cut -d'/' -f1 | grep -v github.com | uniq | grep -E '^[a-g]'))
  - stage: build
    name: "Tests N-Z"
    os: linux
    arch: arm64
    dist: bionic
    go: 1.16.x
    env:
      - GO111MODULE=on
    script:
      - go run build/ci.go test $(printf './%s/... ' $(go list ./... | sed 's|github.com/ethereum/go-ethereum/||g' | cut -d'/' -f1 | grep -v github.com | uniq | grep -E '^[h-z]'))

### This works.
##
#  - stage: build
#    if: type = push
#    name: "Build"
#    os: linux
#    dist: bionic
#    sudo: required
#    go: 1.16.x
#    env:
#      - GO111MODULE=on
#    git:
#      submodules: false
#    addons:
#      apt:
#        packages:
#          - gcc-multilib
#    script:
#      - go run build/ci.go install -dlgo
#      - go run build/ci.go install -dlgo -arch 386
#
#      # Switch over GCC to cross compilation (breaks 386, hence why do it here only)
#      - sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install gcc-arm-linux-gnueabi libc6-dev-armel-cross gcc-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-aarch64-linux-gnu libc6-dev-arm64-cross
#      - sudo ln -s /usr/include/asm-generic /usr/include/asm
#
#      - GOARM=5 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc
#      - GOARM=6 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc
#      - GOARM=7 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabihf-gcc
#      - go run build/ci.go install -dlgo -arch arm64 -cc aarch64-linux-gnu-gcc
