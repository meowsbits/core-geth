name: VM Benchmark

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:

  bench:
    name: VM Benchmarking
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          cd ..
          go get golang.org/x/perf/cmd/...
          cd -
          git submodule update --init --recursive
          mkdir -p bin
          echo "$(pwd)/bin" >> $GITHUB_PATH
          cat <<EOF > ./bin/suite_compressor
            while read -r line; do if grep -q '/op' <<< "$line"; then echo "$(dirname $(echo ${line} | cut -d' ' -f1)) $(echo $line | cut -d' ' -f2-)";fi; done
          EOF
          chmod +x ./bin/suite_compressor

      - name: Setup Env
        # This can be configured in other ways to toggle the full EVMC suite benchmarks.
        # For now, I care mostly only about core-geth vs. go-ethereum, so I'm going to skip those.
        run: |
          echo "bench_evmc=off" >> $GITHUB_ENV
          echo "goethereum_version=v1.9.25" >> $GITHUB_ENV

      - name: Benchmark etclabscore/core-geth
        run: |
          go test ./tests -count 1 -p 1 -timeout 60m -run NONE -bench=VM -v |& tee vm-core-geth-bench.out

      - name: Benchmark ethereum/go-ethereum
        run: |
          git remote add foundation https://github.com/ethereum/go-ethereum.git
          git fetch foundation ${{ env.goethereum_version }}
          git checkout ${{ env.goethereum_version }}
          git submodule update
          git checkout $GITHUB_SHA -- tests/vm_bench_test.go
          go test ./tests -count 1 -p 1 -timeout 60m -run NONE -bench=VM -v |& tee vm-go-ethereum-bench.out

      - name: "Analyze Results (ethereum/go-ethereum vs. etclabscore/core-geth)"
        run: |
          benchstat <(suite_compressor < vm-go-ethereum-bench.out) <(suite_compressor < vm-core-geth-bench.out)
          wait
          benchstat -delta-test=none vm-go-ethereum-bench.out vm-core-geth-bench.out

      - name: Prepare EVMC Benches
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          git checkout $GITHUB_SHA
          git submodule update

      - name: Install EVMC Deps
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          go get golang.org/x/mobile/cmd/gomobile
          gomobile init
          make hera
          make ssvm
          make evmone
          make aleth-interpreter

      - name: "Benchmark EVM (EWASM): Hera"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          go test ./tests -count 1 -p 1 -timeout 60m -run NONE -bench=VM -v -evmc.ewasm=$(pwd)/build/_workspace/hera/build/src/libhera.so |& tee vm-evmc-hera-bench.out

      - name: "Analyze Results (etclabscore/core-geth vs. ewasm/hera)"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          benchstat <(suite_compressor < vm-core-geth-bench.out) <(suite_compressor < vm-evmc-hera-bench.out)
          benchstat -delta-test=none vm-core-geth-bench.out vm-evmc-hera-bench.out

      - name: "Benchmark EVM (EWASM): SSVM-EVMC"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          go test ./tests -count 1 -p 1 -timeout 60m -run NONE -bench=VM -v -evmc.ewasm=$(pwd)/build/_workspace/SSVM/build/tools/ssvm-evmc/libssvmEVMC.so |& tee vm-evmc-ssvm-bench.out

      - name: "Analyze Results (etclabscore/core-geth vs. ssvm/ssvm-evmc)"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          benchstat <(suite_compressor < vm-core-geth-bench.out) <(suite_compressor < vm-evmc-ssvm-bench.out)
          benchstat -delta-test=none vm-core-geth-bench.out vm-evmc-ssvm-bench.out

      - name: "Benchmark EVM: EVMOne"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          go test ./tests -count 1 -p 1 -timeout 60m -run NONE -bench=VM -v -evmc.evm=$(pwd)/build/_workspace/evmone/lib/libevmone.so |& tee vm-evmc-evmone-bench.out

      - name: "Analyze Results (etclabscore/core-geth vs. ethereum/evmone)"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          benchstat <(suite_compressor < vm-core-geth-bench.out) <(suite_compressor < vm-evmc-evmone-bench.out)
          benchstat -delta-test=none vm-core-geth-bench.out vm-evmc-evmone-bench.out

      - name: "Benchmark EVM: Aleth"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          go test ./tests -count 1 -p 1 -timeout 60m -run NONE -bench=VM -v -evmc.evm=$(pwd)/build/_workspace/aleth/lib/libaleth-interpreter.so |& tee vm-evmc-aleth-bench.out

      - name: "Analyze Results (etclabscore/core-geth vs. ethereum/aleth)"
        if: ${{ env.bench_evmc == 'on' }}
        run: |
          benchstat <(suite_compressor < vm-core-geth-bench.out) <(suite_compressor < vm-evmc-aleth-bench.out)
          benchstat -delta-test=none vm-core-geth-bench.out vm-evmc-aleth-bench.out
